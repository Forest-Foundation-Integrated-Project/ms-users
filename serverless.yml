service: ms-${self:custom.serviceName}
frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x

custom:
  serviceName: users
  contextPath: /v1/${self:custom.serviceName}
  baseApi: ${self:custom.contextPath}
  funcDir: src/4-framework/functions
functions:
  createUser:
    handler: ${self:custom.funcDir}/createUser.handler
    events:
      - http:
          path: ${self:custom.baseApi}/user
          method: post
          cors:
            origin: '*'
            headers: '*'
  viewUser:
    handler: ${self:custom.funcDir}/viewUser.handler
    events:
      - http:
          path: ${self:custom.baseApi}/user/{userId}
          method: get
          cors:
            origin: '*'
            headers: '*'
  removeUser:
    handler: ${self:custom.funcDir}/removeUser.handler
    events:
      - http:
          path: ${self:custom.baseApi}/remove/user/{userId}
          method: delete
          cors:
            origin: '*'
            headers: '*'
  updateUser:
    handler: ${self:custom.funcDir}/updateUser.handler
    events:
      - http:
          path: ${self:custom.baseApi}/update/user/{userId}
          method: put
          cors:
            origin: '*'
            headers: '*'

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-dotenv-plugin
